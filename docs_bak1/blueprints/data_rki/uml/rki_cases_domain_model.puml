@startuml
left to right direction


package flask_covid19.data_all.model_import {

	interface AllImportFull {
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
	}

	interface AllImportIncrement {
		{classifier} download_file()
		{classifier} import_file()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	interface AllImport {
	    datum_reported: Date
		location: String
		location_group: String
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	interface AllFlat {
	    id: Integer
	    datum_reported: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
		day_of_year: Integer
	    day_of_week: Integer
	    week_of_year: Integer
	    year_week:  String
	    day_of_week_str: String
		month_str: String
		location: String
		location_group: String
		{classifier} import_file_flat()
		{classifier} get_years(): Integer[]
		{classifier} get_days(): Date[]
		{classifier} get_days_for_year(year: Integer): Date[]
		{classifier} get_location_groups(): String[]
		{classifier} get_locations_for_location_group(location_group: String): String[]
		{classifier} get_data_for_location(location: String): AllFlat[]
		{classifier} get_data_for_day(datum_reported: Date): AllFlat[]
	}

}

package flask_covid19.data_rki.model_import {

	entity RkiImport {
		id: Integer
	    fid: String
	    id_bundesland: String
	    bundesland: String
	    landkreis: String
	    altersgruppe: String
	    geschlecht: String
	    anzahl_fall: String
	    anzahl_todesfall: String
	    meldedatum: String
	    id_landkreis: String
	    datenstand: String
	    neuer_fall: String
	    neuer_todesfall: String
	    ref_datum: String
	    neu_genesen: String
	    anzahl_genesen: String
	    ist_erkrankungsbeginn: String
	    altersgruppe2: String
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	entity RkiFlat {
	    id: Integer
	    datum_reported: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
		day_of_year: Integer
	    day_of_week: Integer
	    week_of_year: Integer
	    year_week:  String
	    day_of_week_str: String
		month_str: String
		location: String
		location_group: String
	    fid: String
	    id_bundesland: String
	    bundesland: String
	    landkreis: String
	    altersgruppe: String
	    geschlecht: String
	    anzahl_fall: String
	    anzahl_todesfall: String
	    meldedatum: String
	    id_landkreis: String
	    datenstand: String
	    neuer_fall: String
	    neuer_todesfall: String
	    ref_datum: String
	    neu_genesen: String
	    anzahl_genesen: String
	    ist_erkrankungsbeginn: String
	    altersgruppe2: String
		{classifier} import_file_flat()
		{classifier} get_years(): Integer[]
		{classifier} get_days(): Date[]
		{classifier} get_days_for_year(year: Integer): Date[]
		{classifier} get_location_groups(): String[]
		{classifier} get_locations_for_location_group(location_group: String): String[]
		{classifier} get_data_for_location(location: String): RkiCasesFlat[]
		{classifier} get_data_for_day(datum_reported: Date): RkiCasesFlat[]
	}

}

AllImportFull <|-- AllImport
AllImportIncrement <|-- AllImport
AllImport <|-- AllFlat
AllImport <|-- RkiImport
AllFlat <|-- RkiFlat
RkiImport <|-- RkiFlat



package flask_covid19.data_all.model {

	interface AllDateReported {
	    id: Integer
		date_reported:  String
	    year_week:  String
	    datum: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
	    day_of_week: Integer
	    week_of_year: Integer
		get_name_for_weekday()
		{classifier} get_names_for_weekday()
		{classifier} get_datum_parts(my_date_rep: String)
		{classifier} get_datum(my_year: Integer, my_month: Integer, my_day: Integer)
		{classifier} get_datum_as_str(my_year: Integer, my_month: Integer, my_day: Integer)
		{classifier} my_year_week(my_iso_year: Integer, week_number: Integer)
		{classifier} create_new_object_factory(my_date_rep: String)
	}

	interface AllLocationGroup {
	    id: Integer
	    continent:  String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
	}
	interface AllLocation {
	    id: Integer
    }
	interface AllData {
	    id: Integer
	}
}

package flask_covid19.data_rki.model {

	entity RkiMeldedatum {
	    id: Integer
		date_reported:  String
	    year_week:  String
	    datum: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
	    day_of_week: Integer
	    week_of_year: Integer
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
	}

	entity RkiBundesland {
	    id: Integer
		id_bundesland: String
	    region:  String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
	}

	entity RkiLandkreis {
	    id: Integer
		id_landkreis: String
		landkreis: String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
	}

	entity RkiData {
	    id: Integer
	    fid: String
	    id_bundesland: String
	    bundesland: String
	    landkreis: String
	    altersgruppe: String
	    geschlecht: String
	    anzahl_fall: String
	    anzahl_todesfall: String
	    meldedatum: String
	    id_landkreis: String
	    datenstand: String
	    neuer_fall: String
	    neuer_todesfall: String
	    ref_datum: String
	    neu_genesen: String
	    anzahl_genesen: String
	    ist_erkrankungsbeginn: String
	    altersgruppe2: String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
	}
}

AllDateReported <|-- RkiMeldedatum
AllLocationGroup <|-- RkiBundesland
AllLocation <|-- RkiLandkreis
AllData <|-- RkiData

RkiLandkreis "1" *--> "*" RkiBundesland : bundesland
RkiData "1" *--> "*" RkiLandkreis : landkreis
RkiData "1" *--> "*" RkiMeldedatum : meldedatum

@enduml
