@startuml
left to right direction

package covid19.blueprints.all.model_import {

	interface AllImportFull {
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
	}

	interface AllImportIncrement {
		{classifier} download_file()
		{classifier} import_file()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	interface AllImport {
	    datum_reported: Date
		location: String
		location_group: String
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	interface AllFlat {
	    id: Integer
	    datum_reported: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
		day_of_year: Integer
	    day_of_week: Integer
	    week_of_year: Integer
	    year_week:  String
	    day_of_week_str: String
		month_str: String
		location: String
		location_group: String
		{classifier} import_file_flat()
		{classifier} get_years(): Integer[]
		{classifier} get_days(): Date[]
		{classifier} get_days_for_year(year: Integer): Date[]
		{classifier} get_location_groups(): String[]
		{classifier} get_locations_for_location_group(location_group: String): String[]
		{classifier} get_data_for_location(location: String): AllFlat[]
		{classifier} get_data_for_day(datum_reported: Date): AllFlat[]
	}
}

package covid19.blueprints.who.model_import {

	entity WhoImport {
	    id: Integer
	    date_reported: String
	    country_code: String
	    country: String
	    who_region: String
	    new_cases: String
	    cumulative_cases: String
	    new_deaths: String
	    cumulative_deaths: String
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}

	entity WhoFlat {
	    id: Integer
	    datum_reported: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
		day_of_year: Integer
	    day_of_week: Integer
	    week_of_year: Integer
	    year_week: String
	    day_of_week_str: String
		month_str: String
		location: String
		location_group: String
	    date_reported: String
	    country_code: String
	    country: String
	    who_region: String
	    new_cases: String
	    cumulative_cases: String
	    new_deaths: String
	    cumulative_deaths: String
		{classifier} import_file_flat()
		{classifier} get_years(): Integer[]
		{classifier} get_days(): Date[]
		{classifier} get_days_for_year(year: Integer): Date[]
		{classifier} get_location_groups(): String[]
		{classifier} get_locations_for_location_group(location_group: String): String[]
		{classifier} get_data_for_location(location: String): WhoFlat[]
		{classifier} get_data_for_day(datum_reported: Date): WhoFlat[]
	}

}

AllImportFull <|-- AllImport
AllImportIncrement <|-- AllImport
AllImport <|-- AllFlat

AllImport <|-- WhoImport
AllFlat <|-- WhoFlat

WhoImport <|-- WhoFlat

@enduml
