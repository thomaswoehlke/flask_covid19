@startuml
'https://plantuml.com/class-diagram

'abstract class AbstractList
'abstract AbstractCollection
'interface List
'interface Collection

'List <|-- AbstractList
'Collection <|-- AbstractCollection

'Collection <|- List
'AbstractCollection <|- AbstractList
'AbstractList <|-- ArrayList

'class ArrayList {
'Object[] elementData
'size()
'}

'enum TimeUnit {
'DAYS
'HOURS
'MINUTES
'}

package data_all.framework.model {

    abstract class AllEntity {
        id: Integer
        processed_update: Boolean
        processed_full_update: Boolean

        set_processed_update()
        set_processed_full_update()
        unset_processed_update()
        unset_processed_full_update()
        {classifier} remove_all()
        {classifier} __query_all()
        {classifier} get_all(page:Integer)
        {classifier} find_all()
        {classifier} find_all_as_dict()
        {classifier} find_all_as_str()
        {classifier} get_by_id()
        {classifier} find_by_id()
        {classifier} find_by_not_processed_update()
        {classifier} find_by_not_processed_full_update()
        {classifier} set_all_processed_full_update()
        {classifier} set_all_processed_update()
        {classifier} count()
    }
    abstract class AllImport {
        id: Integer
        datum_reported: Date
        date_reported_import_str: String
		location: String
		location_group: String

		{classifier} find_by_datum(datum: date)
		{classifier} find_by_datum_str(datum: date)
		{classifier} find_by_datum_reported(datum: date)
		{classifier} get_datum_list()
	}
    abstract class AllDateReported {
        id: Integer
	    processed_update: Boolean
        processed_full_update: Boolean
	    date_reported_import_str: String
	    datum: Date
        year_day_of_year: String
        year_week:  String
        year_week:  String
	    year: Integer
	    month: Integer
	    day_of_month: Integer
	    day_of_week: Integer
	    week_of_year: Integer

        {classifier} __query_all()
        {classifier} get_all(page: int)
        {classifier} find_all()
		get_name_for_weekday()
		{classifier} get_names_for_weekday()
		get_names_for_month()
		{classifier} get_by_datum()
		{classifier} get_by_date_reported()
		{classifier} find_by_date_reported()
		{classifier} find_by_year_week()
		{classifier} get_joungest_datum()
		{classifier} set_all_processed_update()
		{classifier} find_all_as_str()
    }
    abstract class AllLocation {
        id: Integer
	    processed_update: Boolean
        processed_full_update: Boolean
        location_code: String
	    location: String
	    location_group: AllLocationGroup

        {classifier} __query_all()
        {classifier} get_all(page: int)
        {classifier} find_all()

	    {classifier} find_by_location_code(location_code: str)
	    {classifier} get_by_location_code(location_code: str)
	    {classifier} find_by_location(location: str)
	    {classifier} get_by_location(location: str)
	    {classifier} find_by_location_group(location_group: AllLocationGroup)
	    {classifier} get_by_location_group( location_group: AllLocationGroup, page: int)
	    {classifier} find_by_location_code_and_location_and_location_group(location_code: str, location: str, location_group: AllLocationGroup)
	    {classifier} get_by_location_code_and_location_and_location_group(location_code: str, location: str, location_group: AllLocationGroup)
	    {classifier} find_by_location_code_and_location(location_code: str, location: str)
	    {classifier} get_by_location_code_and_location(location_code: str, location: str)
	    {classifier} __query_all()
	    {classifier} find_all()
	    {classifier} find_all_as_str()
	    {classifier} find_all_as_dict()
	    {classifier} get_all(page: int)
    }
    abstract class AllLocationGroup {
        id: Integer
	    processed_update: Boolean
        processed_full_update: Boolean
	    location_group:  String

	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
    }
    abstract class AllFactTable {
	    id: Integer
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
    }

    AllEntity <|- AllFactTableTimeSeries
    AllFactTableTimeSeries <|- AllFactTable
    AllEntity <|- AllDateReported
    AllEntity <|- AllImport
    AllEntity <|- AllLocation
    AllEntity <|- AllLocationGroup

    AllLocation "1" *--> "*" AllLocationGroup : region
    AllFactTable "1" *--> "*" AllLocation : country
    AllFactTable "1" *--> "*" AllDateReported : date_reported
}

@enduml
