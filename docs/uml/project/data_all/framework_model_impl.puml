@startuml
'https://plantuml.com/class-diagram

'abstract class AbstractList
'abstract AbstractCollection
'interface List
'interface Collection

'List <|-- AbstractList
'Collection <|-- AbstractCollection

'Collection <|- List
'AbstractCollection <|- AbstractList
'AbstractList <|-- ArrayList

'class ArrayList {
'Object[] elementData
'size()
'}

'enum TimeUnit {
'DAYS
'HOURS
'MINUTES
'}

package data_all.framework.model {

    abstract class AllEntity {
        id: Integer
        processed_update: Boolean
        processed_full_update: Boolean
        {classifier} set_processed_update()
        {classifier} set_processed_full_update()
        unset_processed_update()
        unset_processed_full_update()
        {classifier} remove_all()
        {classifier} __query_all()
        {classifier} get_all(page:Integer)
        {classifier} find_all()
        {classifier} find_all_as_dict()
        {classifier} find_all_as_str()
        {classifier} get_by_id()
        {classifier} find_by_id()
        {classifier} find_by_not_processed_update()
        {classifier} find_by_not_processed_full_update()
        set_all_processed_full_update()
        set_all_processed_update()
        {classifier} count()
    }
    abstract class AllImport {
        datum_reported: Date
		location: String
		location_group: String
		{classifier} download_file()
		{classifier} import_file()
		{classifier} full_update_dimension_tables()
		{classifier} full_update_fact_table()
		{classifier} full_update_star_schema()
		{classifier} update_dimension_tables()
		{classifier} update_fact_table()
		{classifier} update_star_schema()
	}
    abstract class AllDateReported {
        id: Integer
		date_reported:  String
	    year_week:  String
	    datum: Date
	    year: Integer
	    month: Integer
	    day_of_month: Integer
	    day_of_week: Integer
	    week_of_year: Integer
		get_name_for_weekday()
		{classifier} get_names_for_weekday()
		{classifier} get_datum_parts(my_date_rep: String)
		{classifier} get_datum(my_year: Integer, my_month: Integer, my_day: Integer)
		{classifier} get_datum_as_str(my_year: Integer, my_month: Integer, my_day: Integer)
		{classifier} my_year_week(my_iso_year: Integer, week_number: Integer)
		{classifier} create_new_object_factory(my_date_rep: String)
    }
    abstract class AllLocation {
        id: Integer
	    location:  String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
    }
    abstract class AllLocationGroup {
        id: Integer
	    location_group:  String
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
    }
    abstract class AllFactTable {
	    id: Integer
	    {classifier} remove_all()
	    {classifier} get_all_as_page(page: Integer)
	    {classifier} get_all()
	    {classifier} get_all_as_dict()
	    {classifier} get_by_id(other_id: Integer)
	    {classifier} find_by_id(other_id: Integer)
    }

    AllLocation "1" *--> "*" AllLocationGroup : region
    AllFactTable "1" *--> "*" AllLocation : country
    AllFactTable "1" *--> "*" AllDateReported : date_reported
}

@enduml
